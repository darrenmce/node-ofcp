/*! ofcp 29-10-2013 */
function startApp(){var a=fire.child("games");a.on("value",updateGameList),ko.applyBindings(gamesModel),gamesModel.game.subscribe(gameParse),$("#btn_createGame").on("click",function(a){a.preventDefault();var b=$("#txt_createGame");createGame(b.val()),b.val("")}),$("#btn_logout").text("Logout [ "+username+" ]").on("click",function(a){a.preventDefault(),$.getJSON(server+"/logout",function(a){a.logout?location.reload(!0):console.error("Logout Failed: "+a)})})}function updateGameList(a){gamesModel.gameList(_.map(a.val(),function(a,b){return{gameId:b,name:a.name||"untitled"}}))}function gameSync(){var a=currentGame.game.getData();gamesModel.game({gameId:currentGame.gameId,game:a}),fire.child("games").child(currentGame.gameId).set(a)}function gameParse(a){currentGame.game&&currentGame.gameId===a.gameId?currentGame.game.setData(a.game):(currentGame.gameId=a.gameId,currentGame.game=new Game(username,rules,a.game),currentGame.game.addPlayer(username,username),gameSync())}function parseFireGame(a){gamesModel.game({gameId:a.name(),game:new Game(username,rules,a.val()).getData()})}function joinGame(a){gamesModel.game().gameId&&fire.child("games").child(gamesModel.game().gameId).off("value",parseFireGame),fire.child("games").child(a).on("value",parseFireGame)}function createGame(a){fire.child("games").push(new Game(username,rules,{name:a}).getData())}function formatButtons(a){$(a[1]).find("button").on("click",function(a){a.preventDefault(),joinGame(this.getAttribute("data-gameId"))})}function formatPlayer(a){var b,c=_.find(a,function(a){return $(a).hasClass("div_player")});if(c&&(b=$(c).find(".board")),currentGame.game&&b){var d=$(b).find(".frontRow"),e=$(b).find(".midRow"),f=$(b).find(".backRow"),g=$(b).find(".unplayed"),h=function(a){var b=a[0],c=a[1],d=b.text().split(","),e=0;b.empty(),d.forEach(function(a){if(2===a.length){var c=$(cardHTML(a));c.attr("data-card",a),e++,b.hasClass("unplayed")&&b.attr("data-username")===username&&(c.prop("draggable",!0),c.attr("ondragstart","dragCard(event)"),c.addClass("playable")),b.append(c)}});for(var f=c-e,g=0;f>g;g++){var h=$(cardHTML());h.attr("ondrop","dropCard(event)"),h.attr("ondragover","dragOver(event)"),h.attr("ondragleave","dragLeave(event)"),h.attr("data-card","empty"),b.append(h)}};Array.prototype.forEach.call([[d,currentGame.game.rules.game.playerRules.rows.frontRow],[e,currentGame.game.rules.game.playerRules.rows.midRow],[f,currentGame.game.rules.game.playerRules.rows.backRow],[g,0]],h)}}function cardHTML(a){return a?new PlayingCard(a).getHTML():'<div class="playingCard"></div>'}function dropCard(a){var b,c,d=$(a.target).parent(),e=a.dataTransfer.getData("card");d.hasClass("frontRow")?(c="frontRow",b=2):d.hasClass("midRow")?(c="frontRow",b=1):(c="frontRow",b=0);var f=currentGame.game.getPlayer(username);f.playCard(b,e);var g=f.turnNumber>1?1:0;f.unplayed.length===g&&currentGame.game.endTurn(),gameSync()}function dragOver(a){$(a.target).parent().addClass("dragover"),$(a.target).parent().children().addClass("dragover"),a.preventDefault()}function dragLeave(a){$(a.target).parent().removeClass("dragover"),$(a.target).parent().children().removeClass("dragover"),a.preventDefault()}function dragCard(a){a.dataTransfer.setData("card",a.target.getAttribute("data-card"))}function startGame(){currentGame.game.startGame(),currentGame.game.deal(),gameSync()}function startApp(){var a=fire.child("games");a.on("value",updateGameList),ko.applyBindings(gamesModel),gamesModel.game.subscribe(gameParse),$("#btn_createGame").on("click",function(a){a.preventDefault();var b=$("#txt_createGame");createGame(b.val()),b.val("")}),$("#btn_logout").text("Logout [ "+username+" ]").on("click",function(a){a.preventDefault(),$.getJSON(server+"/logout",function(a){a.logout?location.reload(!0):console.error("Logout Failed: "+a)})})}function updateGameList(a){gamesModel.gameList(_.map(a.val(),function(a,b){return{gameId:b,name:a.name||"untitled"}}))}function gameSync(){var a=currentGame.game.getData();gamesModel.game({gameId:currentGame.gameId,game:a}),fire.child("games").child(currentGame.gameId).set(a)}function gameParse(a){currentGame.game&&currentGame.gameId===a.gameId?currentGame.game.setData(a.game):(currentGame.gameId=a.gameId,currentGame.game=new Game(username,rules,a.game),currentGame.game.addPlayer(username,username),gameSync())}function parseFireGame(a){gamesModel.game({gameId:a.name(),game:new Game(username,rules,a.val()).getData()})}function joinGame(a){gamesModel.game().gameId&&fire.child("games").child(gamesModel.game().gameId).off("value",parseFireGame),fire.child("games").child(a).on("value",parseFireGame)}function createGame(a){fire.child("games").push(new Game(username,rules,{name:a}).getData())}function formatButtons(a){$(a[1]).find("button").on("click",function(a){a.preventDefault(),joinGame(this.getAttribute("data-gameId"))})}function formatPlayer(a){var b,c=_.find(a,function(a){return $(a).hasClass("div_player")});if(c&&(b=$(c).find(".board")),currentGame.game&&b){var d=$(b).find(".frontRow"),e=$(b).find(".midRow"),f=$(b).find(".backRow"),g=$(b).find(".unplayed"),h=function(a){var b=a[0],c=a[1],d=b.text().split(","),e=0;b.empty(),d.forEach(function(a){if(2===a.length){var c=$(cardHTML(a));c.attr("data-card",a),e++,b.hasClass("unplayed")&&b.attr("data-username")===username&&(c.prop("draggable",!0),c.attr("ondragstart","dragCard(event)"),c.addClass("playable")),b.append(c)}});for(var f=c-e,g=0;f>g;g++){var h=$(cardHTML());h.attr("ondrop","dropCard(event)"),h.attr("ondragover","dragOver(event)"),h.attr("ondragleave","dragLeave(event)"),h.attr("data-card","empty"),b.append(h)}};Array.prototype.forEach.call([[d,currentGame.game.rules.game.playerRules.rows.frontRow],[e,currentGame.game.rules.game.playerRules.rows.midRow],[f,currentGame.game.rules.game.playerRules.rows.backRow],[g,0]],h)}}function cardHTML(a){return a?new PlayingCard(a).getHTML():'<div class="playingCard"></div>'}function dropCard(a){var b,c,d=$(a.target).parent(),e=a.dataTransfer.getData("card");d.hasClass("frontRow")?(c="frontRow",b=2):d.hasClass("midRow")?(c="frontRow",b=1):(c="frontRow",b=0);var f=currentGame.game.getPlayer(username);f.playCard(b,e);var g=f.turnNumber>1?1:0;f.unplayed.length===g&&currentGame.game.endTurn(),gameSync()}function dragOver(a){$(a.target).parent().addClass("dragover"),$(a.target).parent().children().addClass("dragover"),a.preventDefault()}function dragLeave(a){$(a.target).parent().removeClass("dragover"),$(a.target).parent().children().removeClass("dragover"),a.preventDefault()}function dragCard(a){a.dataTransfer.setData("card",a.target.getAttribute("data-card"))}function startGame(){currentGame.game.startGame(),currentGame.game.deal(),gameSync()}var Deck=function(a){var b=a?a:{};this.setData(b)};Deck.prototype={draw:function(a){var b=this,c=a||1;if(b.cards.length>=c){for(var d=[],e=0;c>e;e++){var f=_.random(0,b.cards.length-1),g=b.cards.splice(f,1)[0];d.push(g)}return d}return!1},shuffle:function(){this.cards=_.shuffle(this.cards)},getData:function(){return{cards:this.cards}},setData:function(a){this.cards=a.cards||["2c","2d","2h","2s","3c","3d","3h","3s","4c","4d","4h","4s","5c","5d","5h","5s","6c","6d","6h","6s","7c","7d","7h","7s","8c","8d","8h","8s","9c","9d","9h","9s","tc","td","th","ts","jc","jd","jh","js","qc","qd","qh","qs","kc","kd","kh","ks","ac","ad","ah","as"]}};var Game=function(a,b,c){var d=c?c:{};this.username=a,this.rules=b,this.setData(d)};Game.prototype={startGame:function(a){var b=this;if(!b.gameStatus.started){b.resetGame();var c=a||_.random(0,b.players.length-1);b.gameStatus.turn=b.players[c].playerId,b.gameStatus.started=!0}},deal:function(){var a=this,b=a.rules.game;if(a.gameStatus.dealtTurn)return console.warn("Already dealt this turn."),!1;var c=a.getPlayer(a.gameStatus.turn),d=c.turnNumber;if(!(d<b.maxTurns))return console.warn("Game Over!"),a.gameStatus.started=0,!1;if(c.fantasyland)c.dealTo(a.deck.draw(b.fantasyDraw.cards)),c.turnNumber=b.maxTurns-1;else{if(1===d)return c.dealTo(a.deck.draw(b.firstDraw.cards)),a.gameStatus.dealtTurn=!0,!0;if(d<b.maxTurns)return c.dealTo(a.deck.draw(b.draw.cards)),a.gameStatus.dealtTurn=!0,!0}},getPlayer:function(a){var b=this;return $.grep(b.players,function(b){return b.playerId===a})[0]},endTurn:function(){var a=this,b=a.rules.game;if(a.username===a.gameStatus.turn){var c=a.getPlayer(a.gameStatus.turn);if(c.fantasyland&&c.turnNumber>=1&&c.unplayed.length<=b.fantasyDraw.discard||1===c.turnNumber&&c.unplayed.length<=b.firstDraw.discard||c.turnNumber>1&&c.unplayed.length<=b.draw.discard){var d=(a.gameStatus.turnOrder.indexOf(a.username)+1)%a.gameStatus.turnOrder.length;return a.gameStatus.turn=a.gameStatus.turnOrder[d],a.gameStatus.dealtTurn=!1,c.turnNumber++,c.unplayed.length=0,a.deal(),!0}return console.warn("Cannot end turn. You must play your cards first."),!1}},addPlayer:function(a,b){var c=this,d=c.rules.game;if(c.getPlayer(b))return!0;if(c.players.length===d.maxPlayers)return console.warn("Cannot add Player. Game is Full."),!1;if(c.gameStatus.started)return console.warn("Cannot add Player. Game has Started."),!1;var e={};a&&(e.name=a),b&&(e.playerId=b);var f=new Player(e,c.rules.game.playerRules);return c.players.push(f),c.gameStatus.turnOrder.push(f.playerId),!0},getData:function(){return{name:this.name,created:this.created,deck:this.deck.getData(),players:this.players.map(function(a){return a.getData()}),gameStatus:this.gameStatus}},setData:function(a){var b=this;b.name=a.name||"untitled",b.created=a.created||(new Date).getTime(),b.deck=new Deck(a.deck||!1),b.players=a.players&&a.players instanceof Array?a.players.map(function(a){return new Player(a,b.rules.game.playerRules)}):[],a.gameStatus=a.gameStatus?a.gameStatus:{},b.gameStatus={started:a.gameStatus.started||!1,turnOrder:a.gameStatus.turnOrder||[],turn:a.gameStatus.turn||null,dealtTurn:a.gameStatus.dealtTurn||!1}},resetGame:function(){var a=this;a.players.forEach(function(b){b.resetPlayer(!b.fantasyland&&a.rules.fantasyland(b.frontRow))}),a.deck=new Deck(!1)}};var server="http://localhost:3000",fire,gamesModel={gameList:ko.observableArray(),game:ko.observable({})},rules={fantasyland:function(a){return 3===a.length&&-1===a.reduce(function(a,b){return(a.indexOf?a.indexOf("q"):a)+b.indexOf("q")})},game:{maxPlayers:3,playerRules:{rows:{frontRow:3,midRow:5,backRow:5}},maxTurns:6,fantasyDraw:{cards:14,discard:1},firstDraw:{cards:5,discard:0},draw:{cards:3,discard:1},hide:{unplayed:!0,turn:!0,previous:!1}}},currentGame={},username;$(function(){$.getJSON(server+"/getFireBase",function(a){a.username&&a.root&&a.token?(fire=new Firebase(a.root),fire.auth(a.token,function(b){b?console.error("Authentication with Firebase failed"):(username=a.username,startApp())})):console.error("getFireBase node response failure")})});var Deck=function(a){var b=a?a:{};this.setData(b)};Deck.prototype={draw:function(a){var b=this,c=a||1;if(b.cards.length>=c){for(var d=[],e=0;c>e;e++){var f=_.random(0,b.cards.length-1),g=b.cards.splice(f,1)[0];d.push(g)}return d}return!1},shuffle:function(){this.cards=_.shuffle(this.cards)},getData:function(){return{cards:this.cards}},setData:function(a){this.cards=a.cards||["2c","2d","2h","2s","3c","3d","3h","3s","4c","4d","4h","4s","5c","5d","5h","5s","6c","6d","6h","6s","7c","7d","7h","7s","8c","8d","8h","8s","9c","9d","9h","9s","tc","td","th","ts","jc","jd","jh","js","qc","qd","qh","qs","kc","kd","kh","ks","ac","ad","ah","as"]}};var Game=function(a,b,c){var d=c?c:{};this.username=a,this.rules=b,this.setData(d)};Game.prototype={startGame:function(a){var b=this;if(!b.gameStatus.started){b.resetGame();var c=a||_.random(0,b.players.length-1);b.gameStatus.turn=b.players[c].playerId,b.gameStatus.started=!0}},deal:function(){var a=this,b=a.rules.game;if(a.gameStatus.dealtTurn)return console.warn("Already dealt this turn."),!1;var c=a.getPlayer(a.gameStatus.turn),d=c.turnNumber;if(!(d<b.maxTurns))return console.warn("Game Over!"),a.gameStatus.started=0,!1;if(c.fantasyland)c.dealTo(a.deck.draw(b.fantasyDraw.cards)),c.turnNumber=b.maxTurns-1;else{if(1===d)return c.dealTo(a.deck.draw(b.firstDraw.cards)),a.gameStatus.dealtTurn=!0,!0;if(d<b.maxTurns)return c.dealTo(a.deck.draw(b.draw.cards)),a.gameStatus.dealtTurn=!0,!0}},getPlayer:function(a){var b=this;return $.grep(b.players,function(b){return b.playerId===a})[0]},endTurn:function(){var a=this,b=a.rules.game;if(a.username===a.gameStatus.turn){var c=a.getPlayer(a.gameStatus.turn);if(c.fantasyland&&c.turnNumber>=1&&c.unplayed.length<=b.fantasyDraw.discard||1===c.turnNumber&&c.unplayed.length<=b.firstDraw.discard||c.turnNumber>1&&c.unplayed.length<=b.draw.discard){var d=(a.gameStatus.turnOrder.indexOf(a.username)+1)%a.gameStatus.turnOrder.length;return a.gameStatus.turn=a.gameStatus.turnOrder[d],a.gameStatus.dealtTurn=!1,c.turnNumber++,c.unplayed.length=0,a.deal(),!0}return console.warn("Cannot end turn. You must play your cards first."),!1}},addPlayer:function(a,b){var c=this,d=c.rules.game;if(c.getPlayer(b))return!0;if(c.players.length===d.maxPlayers)return console.warn("Cannot add Player. Game is Full."),!1;if(c.gameStatus.started)return console.warn("Cannot add Player. Game has Started."),!1;var e={};a&&(e.name=a),b&&(e.playerId=b);var f=new Player(e,c.rules.game.playerRules);return c.players.push(f),c.gameStatus.turnOrder.push(f.playerId),!0},getData:function(){return{name:this.name,created:this.created,deck:this.deck.getData(),players:this.players.map(function(a){return a.getData()}),gameStatus:this.gameStatus}},setData:function(a){var b=this;b.name=a.name||"untitled",b.created=a.created||(new Date).getTime(),b.deck=new Deck(a.deck||!1),b.players=a.players&&a.players instanceof Array?a.players.map(function(a){return new Player(a,b.rules.game.playerRules)}):[],a.gameStatus=a.gameStatus?a.gameStatus:{},b.gameStatus={started:a.gameStatus.started||!1,turnOrder:a.gameStatus.turnOrder||[],turn:a.gameStatus.turn||null,dealtTurn:a.gameStatus.dealtTurn||!1}},resetGame:function(){var a=this;a.players.forEach(function(b){b.resetPlayer(!b.fantasyland&&a.rules.fantasyland(b.frontRow))}),a.deck=new Deck(!1)}};var server="http://localhost:3000",fire,gamesModel={gameList:ko.observableArray(),game:ko.observable({})},rules={fantasyland:function(a){return 3===a.length&&-1===a.reduce(function(a,b){return(a.indexOf?a.indexOf("q"):a)+b.indexOf("q")})},game:{maxPlayers:3,playerRules:{rows:{frontRow:3,midRow:5,backRow:5}},maxTurns:6,fantasyDraw:{cards:14,discard:1},firstDraw:{cards:5,discard:0},draw:{cards:3,discard:1},hide:{unplayed:!0,turn:!0,previous:!1}}},currentGame={},username;$(function(){$.getJSON(server+"/getFireBase",function(a){a.username&&a.root&&a.token?(fire=new Firebase(a.root),fire.auth(a.token,function(b){b?console.error("Authentication with Firebase failed"):(username=a.username,startApp())})):console.error("getFireBase node response failure")})});var Player=function(a,b){var c=a?a:{};this.rules=b,this.setData(c)};Player.prototype={playCard:function(a,b){var c,d,e=this,f=e.unplayed.indexOf(b);return 0===a?(c=e.backRow,d=e.rules.rows.backRow):1===a?(c=e.midRow,d=e.rules.rows.midRow):(c=e.frontRow,d=e.rules.rows.frontRow),c.length<d&&f>=0?(c.push(b),e.unplayed.splice(f,1),!0):(console.warn("Cannot play card, you do not have this card or the row is full."),!1)},dealTo:function(a){a instanceof Array?this.unplayed=this.unplayed.concat(a):this.unplayed.push(a)},getData:function(){return{name:this.name,backRow:this.backRow,midRow:this.midRow,frontRow:this.frontRow,unplayed:this.unplayed,playerId:this.playerId,turnNumber:this.turnNumber,fantasyland:this.fantasyland}},setData:function(a){this.name=a.name||"unnamed",this.backRow=a.backRow||[],this.midRow=a.midRow||[],this.frontRow=a.frontRow||[],this.unplayed=a.unplayed||[],this.playerId=a.playerId||_.uniqueId("player_"),this.turnNumber=a.turnNumber||1,this.fantasyland=a.fantasyland||!1},resetPlayer:function(a){this.backRow=[],this.midRow=[],this.frontRow=[],this.unplayed=[],this.turnNumber=1,this.fantasyland=a}};var Player=function(a,b){var c=a?a:{};this.rules=b,this.setData(c)};Player.prototype={playCard:function(a,b){var c,d,e=this,f=e.unplayed.indexOf(b);return 0===a?(c=e.backRow,d=e.rules.rows.backRow):1===a?(c=e.midRow,d=e.rules.rows.midRow):(c=e.frontRow,d=e.rules.rows.frontRow),c.length<d&&f>=0?(c.push(b),e.unplayed.splice(f,1),!0):(console.warn("Cannot play card, you do not have this card or the row is full."),!1)},dealTo:function(a){a instanceof Array?this.unplayed=this.unplayed.concat(a):this.unplayed.push(a)},getData:function(){return{name:this.name,backRow:this.backRow,midRow:this.midRow,frontRow:this.frontRow,unplayed:this.unplayed,playerId:this.playerId,turnNumber:this.turnNumber,fantasyland:this.fantasyland}},setData:function(a){this.name=a.name||"unnamed",this.backRow=a.backRow||[],this.midRow=a.midRow||[],this.frontRow=a.frontRow||[],this.unplayed=a.unplayed||[],this.playerId=a.playerId||_.uniqueId("player_"),this.turnNumber=a.turnNumber||1,this.fantasyland=a.fantasyland||!1},resetPlayer:function(a){this.backRow=[],this.midRow=[],this.frontRow=[],this.unplayed=[],this.turnNumber=1,this.fantasyland=a}};